<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\TIMER1n_MatchInterrupt.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\TIMER1n_MatchInterrupt.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6180002: Last Updated: Wed Aug 31 14:50:11 2022
<BR><P>
<H3>Maximum Stack Usage =        144 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; DEBUG_Init &rArr; debug_frmwrk_init &rArr; HAL_UART_Init &rArr; uart_set_divisors
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[18]">ADC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">ADC_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[18]">ADC_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[9]">EINT0_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[a]">EINT1_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[b]">EINT2_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[c]">EINT3_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from a31g12x_it.o(.text.HardFault_Handler) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[10]">I2C0_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[14]">I2C1_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[1f]">I2C2_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[6]">LVI_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from a31g12x_it.o(.text.NMI_Handler) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from a31g12x_it.o(.text.PendSV_Handler) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from a31g12x_it.o(.text.SVC_Handler) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from a31g12x_it.o(.text.SysTick_Handler) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[22]">SystemInit</a> from system_a31g12x.o(.text.SystemInit) referenced from startup_a31g12x.o(.text)
 <LI><a href="#[d]">TIMER10_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[e]">TIMER11_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[f]">TIMER12_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[1b]">TIMER13_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[1c]">TIMER14_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[1d]">TIMER15_Handler</a> from a31g12x_it.o(.text.TIMER15_Handler) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[1e]">TIMER16_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[15]">TIMER20_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[16]">TIMER21_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[13]">TIMER30_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[19]">UART0_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[1a]">UART1_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[2e]">UARTGetCh</a> from a31g12x_hal_debug_frmwrk.o(.text.UARTGetCh) referenced from a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
 <LI><a href="#[2d]">UARTGetChar</a> from a31g12x_hal_debug_frmwrk.o(.text.UARTGetChar) referenced from a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
 <LI><a href="#[26]">UARTPutChar</a> from a31g12x_hal_debug_frmwrk.o(.text.UARTPutChar) referenced from a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
 <LI><a href="#[2a]">UARTPutDec</a> from a31g12x_hal_debug_frmwrk.o(.text.UARTPutDec) referenced from a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
 <LI><a href="#[2b]">UARTPutDec16</a> from a31g12x_hal_debug_frmwrk.o(.text.UARTPutDec16) referenced from a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
 <LI><a href="#[2c]">UARTPutDec32</a> from a31g12x_hal_debug_frmwrk.o(.text.UARTPutDec32) referenced from a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
 <LI><a href="#[27]">UARTPutHex</a> from a31g12x_hal_debug_frmwrk.o(.text.UARTPutHex) referenced from a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
 <LI><a href="#[28]">UARTPutHex16</a> from a31g12x_hal_debug_frmwrk.o(.text.UARTPutHex16) referenced from a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
 <LI><a href="#[29]">UARTPutHex32</a> from a31g12x_hal_debug_frmwrk.o(.text.UARTPutHex32) referenced from a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
 <LI><a href="#[24]">UARTPuts</a> from a31g12x_hal_debug_frmwrk.o(.text.UARTPuts) referenced from a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
 <LI><a href="#[25]">UARTPuts_</a> from a31g12x_hal_debug_frmwrk.o(.text.UARTPuts_) referenced from a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
 <LI><a href="#[11]">USART10_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[17]">USART11_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[20]">USART12_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[21]">USART13_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[8]">WDT_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[12]">WT_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[7]">WUT_Handler</a> from startup_a31g12x.o(.text) referenced from startup_a31g12x.o(RESET)
 <LI><a href="#[23]">__main</a> from __main.o(!!!main) referenced from startup_a31g12x.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[23]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(.text)
</UL>
<P><STRONG><a name="[2f]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[31]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[72]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[73]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[32]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[74]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[36]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[75]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[76]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[77]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[78]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[79]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[7a]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[7b]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[7c]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[7d]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[7e]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[7f]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[80]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[81]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[82]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[83]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[84]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[85]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[86]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[87]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[88]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[89]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[3b]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[8b]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[8c]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[8d]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[8e]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[8f]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[90]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[91]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[30]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[92]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[33]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[35]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[93]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[37]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; DEBUG_Init &rArr; debug_frmwrk_init &rArr; HAL_UART_Init &rArr; uart_set_divisors
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[94]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[41]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3a]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[95]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3c]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>ADC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>EINT0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EINT1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EINT2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EINT3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>I2C0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>I2C1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>I2C2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>LVI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TIMER10_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER11_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER12_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIMER13_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIMER14_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIMER16_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIMER20_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIMER21_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIMER30_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>UART0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>UART1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>USART10_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>USART11_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USART12_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USART13_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>WDT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>WT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>WUT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_a31g12x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutDec32
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutDec16
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutDec
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_set_divisors
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_value
</UL>

<P><STRONG><a name="[46]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutDec32
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutDec16
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutDec
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_value
</UL>

<P><STRONG><a name="[96]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>__aeabi_idivmod</STRONG> (Thumb, 338 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[39]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[9b]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[9c]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[9d]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>DEBUG_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, main.o(.text.DEBUG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DEBUG_Init &rArr; debug_frmwrk_init &rArr; HAL_UART_Init &rArr; uart_set_divisors
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_frmwrk_init
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>DEBUG_MenuPrint</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(.text.DEBUG_MenuPrint))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DEBUG_MenuPrint
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>

<P><STRONG><a name="[6b]"></a>Delay</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, main.o(.text.Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1n_MatchInterruptRun
</UL>

<P><STRONG><a name="[44]"></a>Dis_value</STRONG> (Thumb, 208 bytes, Stack size 56 bytes, fnd.o(.text.Dis_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Dis_value
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1n_MatchInterruptRun
</UL>

<P><STRONG><a name="[47]"></a>FND_data</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, fnd.o(.text.FND_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FND_data &rArr; FND_driveOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FND_driveOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FND_drive
</UL>

<P><STRONG><a name="[49]"></a>FND_drive</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, fnd.o(.text.FND_drive))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FND_drive &rArr; FND_data &rArr; FND_driveOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FND_data
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1n_MatchInterruptRun
</UL>

<P><STRONG><a name="[48]"></a>FND_driveOutput</STRONG> (Thumb, 124 bytes, Stack size 12 bytes, fnd.o(.text.FND_driveOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FND_driveOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FND_data
</UL>

<P><STRONG><a name="[4b]"></a>GPIO_Configure</STRONG> (Thumb, 740 bytes, Stack size 72 bytes, main.o(.text.GPIO_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GPIO_Configure &rArr; HAL_GPIO_ConfigOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ClearPin
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ConfigPullup
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ConfigOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>

<P><STRONG><a name="[4e]"></a>HAL_GPIO_ClearPin</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, a31g12x_hal_pcu.o(.text.HAL_GPIO_ClearPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_GPIO_ClearPin
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_indi
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configure
</UL>

<P><STRONG><a name="[6d]"></a>HAL_GPIO_ConfigFunction</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, a31g12x_hal_pcu.o(.text.HAL_GPIO_ConfigFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPIO_ConfigFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_frmwrk_init
</UL>

<P><STRONG><a name="[4c]"></a>HAL_GPIO_ConfigOutput</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, a31g12x_hal_pcu.o(.text.HAL_GPIO_ConfigOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GPIO_ConfigOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configure
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_frmwrk_init
</UL>

<P><STRONG><a name="[4d]"></a>HAL_GPIO_ConfigPullup</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, a31g12x_hal_pcu.o(.text.HAL_GPIO_ConfigPullup))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPIO_ConfigPullup
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configure
</UL>

<P><STRONG><a name="[59]"></a>HAL_GPIO_SetPin</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, a31g12x_hal_pcu.o(.text.HAL_GPIO_SetPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_GPIO_SetPin
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_indi
</UL>

<P><STRONG><a name="[67]"></a>HAL_INT_EInt_MaskDisable</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, a31g12x_hal_intc.o(.text.HAL_INT_EInt_MaskDisable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_INT_EInt_MaskDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER15_Configure
</UL>

<P><STRONG><a name="[63]"></a>HAL_SCU_ClockMonitoring</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, a31g12x_hal_scu.o(.text.HAL_SCU_ClockMonitoring))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SCU_ClockMonitoring
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[60]"></a>HAL_SCU_ClockSource_Enable</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, a31g12x_hal_scu.o(.text.HAL_SCU_ClockSource_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SCU_ClockSource_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[5b]"></a>HAL_SCU_Peripheral_ClockConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, a31g12x_hal_scu.o(.text.HAL_SCU_Peripheral_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SCU_Peripheral_ClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Init
</UL>

<P><STRONG><a name="[50]"></a>HAL_SCU_Peripheral_EnableClock1</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, a31g12x_hal_scu.o(.text.HAL_SCU_Peripheral_EnableClock1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SCU_Peripheral_EnableClock1
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER1n_Init
</UL>

<P><STRONG><a name="[52]"></a>HAL_SCU_Peripheral_EnableClock2</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, a31g12x_hal_scu.o(.text.HAL_SCU_Peripheral_EnableClock2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SCU_Peripheral_EnableClock2
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[61]"></a>HAL_SCU_SystemClockChange</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, a31g12x_hal_scu.o(.text.HAL_SCU_SystemClockChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_SCU_SystemClockChange
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[62]"></a>HAL_SCU_SystemClockDivider</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, a31g12x_hal_scu.o(.text.HAL_SCU_SystemClockDivider))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SCU_SystemClockDivider
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[68]"></a>HAL_TIMER1n_Cmd</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, a31g12x_hal_timer1n.o(.text.HAL_TIMER1n_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_TIMER1n_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER15_Configure
</UL>

<P><STRONG><a name="[65]"></a>HAL_TIMER1n_ConfigInterrupt</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, a31g12x_hal_timer1n.o(.text.HAL_TIMER1n_ConfigInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIMER1n_ConfigInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER15_Configure
</UL>

<P><STRONG><a name="[4f]"></a>HAL_TIMER1n_Init</STRONG> (Thumb, 500 bytes, Stack size 40 bytes, a31g12x_hal_timer1n.o(.text.HAL_TIMER1n_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_TIMER1n_Init &rArr; HAL_SCU_Peripheral_EnableClock1
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_Peripheral_EnableClock1
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER15_Configure
</UL>

<P><STRONG><a name="[6e]"></a>HAL_UART_ConfigStructInit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, a31g12x_hal_uartn.o(.text.HAL_UART_ConfigStructInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_UART_ConfigStructInit
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_frmwrk_init
</UL>

<P><STRONG><a name="[51]"></a>HAL_UART_Init</STRONG> (Thumb, 408 bytes, Stack size 40 bytes, a31g12x_hal_uartn.o(.text.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_UART_Init &rArr; uart_set_divisors
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_set_divisors
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_Peripheral_EnableClock2
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_frmwrk_init
</UL>

<P><STRONG><a name="[54]"></a>HAL_UART_Receive</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, a31g12x_hal_uartn.o(.text.HAL_UART_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_UART_Receive &rArr; HAL_UART_ReceiveByte
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ReceiveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTGetChar
</UL>

<P><STRONG><a name="[55]"></a>HAL_UART_ReceiveByte</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, a31g12x_hal_uartn.o(.text.HAL_UART_ReceiveByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UART_ReceiveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTGetCh
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
</UL>

<P><STRONG><a name="[56]"></a>HAL_UART_Transmit</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, a31g12x_hal_uartn.o(.text.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_UART_Transmit &rArr; HAL_UART_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TransmitByte
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutChar
</UL>

<P><STRONG><a name="[57]"></a>HAL_UART_TransmitByte</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, a31g12x_hal_uartn.o(.text.HAL_UART_TransmitByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_UART_TransmitByte
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, a31g12x_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>LED_indi</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, main.o(.text.LED_indi))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LED_indi &rArr; HAL_GPIO_SetPin
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_SetPin
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ClearPin
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1n_MatchInterruptRun
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, a31g12x_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, a31g12x_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>Port_Init</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, a31g12x_portinit.o(.text.Port_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Port_Init &rArr; HAL_SCU_Peripheral_ClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_Peripheral_ClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, a31g12x_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>SysTick_ExceptionHandler_IT</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.text.SysTick_ExceptionHandler_IT))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, a31g12x_it.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ExceptionHandler_IT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>SystemClock_Config</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, a31g12x_systemclock.o(.text.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemClock_Config &rArr; HAL_SCU_ClockMonitoring
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_ClockMonitoring
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_SystemClockDivider
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_SystemClockChange
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_ClockSource_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22]"></a>SystemInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, system_a31g12x.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(.text)
</UL>
<P><STRONG><a name="[64]"></a>TIMER15_Configure</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, main.o(.text.TIMER15_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TIMER15_Configure &rArr; HAL_TIMER1n_Init &rArr; HAL_SCU_Peripheral_EnableClock1
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER1n_Cmd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_INT_EInt_MaskDisable
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER1n_ConfigInterrupt
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMER1n_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>

<P><STRONG><a name="[1d]"></a>TIMER15_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, a31g12x_it.o(.text.TIMER15_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIMER15_Handler &rArr; TIMER15_IRQHandler_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER15_IRQHandler_IT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_a31g12x.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>TIMER15_IRQHandler_IT</STRONG> (Thumb, 228 bytes, Stack size 4 bytes, main.o(.text.TIMER15_IRQHandler_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TIMER15_IRQHandler_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER15_Handler
</UL>

<P><STRONG><a name="[6a]"></a>TIMER1n_MatchInterruptRun</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, main.o(.text.TIMER1n_MatchInterruptRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TIMER1n_MatchInterruptRun &rArr; Dis_value
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_func
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_indi
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FND_drive
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dis_value
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>

<P><STRONG><a name="[2e]"></a>UARTGetCh</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, a31g12x_hal_debug_frmwrk.o(.text.UARTGetCh))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UARTGetCh &rArr; HAL_UART_ReceiveByte
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ReceiveByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[2d]"></a>UARTGetChar</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, a31g12x_hal_debug_frmwrk.o(.text.UARTGetChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = UARTGetChar &rArr; HAL_UART_Receive &rArr; HAL_UART_ReceiveByte
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[26]"></a>UARTPutChar</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, a31g12x_hal_debug_frmwrk.o(.text.UARTPutChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = UARTPutChar &rArr; HAL_UART_Transmit &rArr; HAL_UART_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutHex32
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutHex16
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutHex
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutDec32
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutDec16
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutDec
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPuts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[2a]"></a>UARTPutDec</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, a31g12x_hal_debug_frmwrk.o(.text.UARTPutDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = UARTPutDec &rArr; UARTPutChar &rArr; HAL_UART_Transmit &rArr; HAL_UART_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[2b]"></a>UARTPutDec16</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, a31g12x_hal_debug_frmwrk.o(.text.UARTPutDec16))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = UARTPutDec16 &rArr; UARTPutChar &rArr; HAL_UART_Transmit &rArr; HAL_UART_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[2c]"></a>UARTPutDec32</STRONG> (Thumb, 312 bytes, Stack size 64 bytes, a31g12x_hal_debug_frmwrk.o(.text.UARTPutDec32))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = UARTPutDec32 &rArr; UARTPutChar &rArr; HAL_UART_Transmit &rArr; HAL_UART_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[27]"></a>UARTPutHex</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, a31g12x_hal_debug_frmwrk.o(.text.UARTPutHex))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = UARTPutHex &rArr; UARTPutChar &rArr; HAL_UART_Transmit &rArr; HAL_UART_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[28]"></a>UARTPutHex16</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, a31g12x_hal_debug_frmwrk.o(.text.UARTPutHex16))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = UARTPutHex16 &rArr; UARTPutChar &rArr; HAL_UART_Transmit &rArr; HAL_UART_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[29]"></a>UARTPutHex32</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, a31g12x_hal_debug_frmwrk.o(.text.UARTPutHex32))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = UARTPutHex32 &rArr; UARTPutChar &rArr; HAL_UART_Transmit &rArr; HAL_UART_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[24]"></a>UARTPuts</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, a31g12x_hal_debug_frmwrk.o(.text.UARTPuts))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = UARTPuts &rArr; UARTPutChar &rArr; HAL_UART_Transmit &rArr; HAL_UART_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPuts_
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[25]"></a>UARTPuts_</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, a31g12x_hal_debug_frmwrk.o(.text.UARTPuts_))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = UARTPuts_ &rArr; UARTPuts &rArr; UARTPutChar &rArr; HAL_UART_Transmit &rArr; HAL_UART_TransmitByte
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPuts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[43]"></a>debug_frmwrk_init</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, a31g12x_hal_debug_frmwrk.o(.text.debug_frmwrk_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = debug_frmwrk_init &rArr; HAL_UART_Init &rArr; uart_set_divisors
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ConfigStructInit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ConfigFunction
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ConfigOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Init
</UL>

<P><STRONG><a name="[6c]"></a>key_func</STRONG> (Thumb, 476 bytes, Stack size 4 bytes, key.o(.text.key_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = key_func
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1n_MatchInterruptRun
</UL>

<P><STRONG><a name="[71]"></a>key_make</STRONG> (Thumb, 268 bytes, Stack size 12 bytes, key.o(.text.key_make))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = key_make
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan
</UL>

<P><STRONG><a name="[38]"></a>main</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = main &rArr; DEBUG_Init &rArr; debug_frmwrk_init &rArr; HAL_UART_Init &rArr; uart_set_divisors
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[6f]"></a>mainloop</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(.text.mainloop))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = mainloop &rArr; GPIO_Configure &rArr; HAL_GPIO_ConfigOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1n_MatchInterruptRun
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER15_Configure
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configure
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_MenuPrint
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>scan</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, key.o(.text.scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = scan &rArr; key_make
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_make
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FND_drive
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5d]"></a>__NVIC_SetPriority</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, main.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER15_Configure
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>

<P><STRONG><a name="[66]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, main.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER15_Configure
</UL>

<P><STRONG><a name="[5c]"></a>SysTick_Config</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, main.o(.text.SysTick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>

<P><STRONG><a name="[53]"></a>uart_set_divisors</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, a31g12x_hal_uartn.o(.text.uart_set_divisors))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uart_set_divisors
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[40]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
